{#
SPDX-FileCopyrightText: 2023 Slavi Pantaleev

SPDX-License-Identifier: AGPL-3.0-or-later
#}

#!/bin/bash

{% if docker_registry_garbage_collect_stop_service_enabled %}
{{ devture_systemd_docker_base_host_command_systemctl }} stop {{ docker_registry_identifier }}.service
{% endif %}

{{ docker_registry_garbage_collect_command_pre }}

function on_exit() {
    {% if docker_registry_garbage_collect_stop_service_enabled %}
    {{ devture_systemd_docker_base_host_command_systemctl }} start {{ docker_registry_identifier }}.service
    {% endif %}

    {{ docker_registry_garbage_collect_command_post }}
}

trap on_exit EXIT

docker_run_flags=''
if [ -t 1 ]; then
    # Got tty
    docker_run_flags='-it'
fi

{{ devture_systemd_docker_base_host_command_docker }} run \
$docker_run_flags \
--rm \
--log-driver=none \
--network={{ docker_registry_container_network }} \
--user={{ docker_registry_uid }}:{{ docker_registry_gid }} \
--cap-drop=ALL \
--read-only \
--mount type=bind,src={{ docker_registry_data_path }},dst=/var/lib/registry \
--mount type=bind,src=/etc/timezone,dst=/etc/timezone,ro \
--mount type=bind,src=/etc/localtime,dst=/etc/localtime,ro \
--tmpfs=/tmp:rw,noexec,nosuid,size=512m \
--env-file={{ docker_registry_base_path }}/env \
{{ docker_registry_container_image }} \
/bin/registry garbage-collect \
/etc/docker/registry/config.yml \
--dry-run={{ docker_registry_garbage_collect_dry_run | to_json }}
